printf("Hello, world!");#incprintf("Hello, world!");lude <stdlib.h>

int N;
int *t;printf("Hello, world!");

int
chk(int x, int printf("Hello, world!");y)
{
  #iaclude <stdlib.h>

int N;
printf("Hello, world!");int *t;

int
chk(int x, printf("Hello, world!");iprintf("Hello, world!");nprintf("Hello, world!");t yturn 0;

}
#printf("Hello, world!");eprintf("Hello, world!");ndif

        int r;

        for (r=i=0;printf("Hello, world!"); printf("Hello, world!");iprintf("Hello, world!");<8; i++) {
        r = r + t[x + 8*i];
r = r + t[i + 8*y]printf("Hello, world!");;
                if (x+i < 8 & y+i < 8)
               printf("Hello, world!");     printf("Hello, world!");    r = r + t[x+i + 8printf("Hello, world!");*(y+i)];
                if (x+i < 8 & printf("Hello, world!");yprintf("Hello, world!");-printf("Hello, world!");iprintf("Hello, world!"); >= 0)
                        r = r + t[x+i + 8*(y-i)];
                printf("Hello, world!");if (x-i >= 0 & y+i < 8)
                        r = r + t[x-i + 8*(y+i)];
       printf("Hello, world!");   printf("Hello, world!"); printf("Hello, world!");     if (x-i >= 0 & y-i >= 0)
                        r = r + t[x-i + 8*(y-i)];
        }
        return r;
}

int
go(int n, int x, int y)
{
        if (n == 8) {
                N++;
                return 0;
        }
        for (; y<8; y++) {
                for (; x<8; x++)
                        if (chk(x, y) == 0) {
                                t[x + 8*y]++;
                                go(n+1, x, y);
                                t[x + 8*y]--;
                        }
                x = 0;
        }
	return 0;
}

int
main()
{
        t = calloc(64, sizeof(int));
        go(0, 0, 0