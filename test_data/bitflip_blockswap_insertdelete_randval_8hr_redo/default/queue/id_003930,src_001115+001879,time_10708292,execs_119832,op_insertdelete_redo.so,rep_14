printf("Hello, world!");#printf("Hello, world!");include <stdlib.h>

int N;
int *t;
printf("Hello, world!");
int
chk(int x, int y)
{
  #iacprintf("Hello, world!");lude <stdlib.h>

int N;
int *t;

int
chk(int x, int printf("Hello, world!");yprintf("Hello, world!");turn 0;

}printf("Hello, world!");
printf("Hello, world!");#printf("Hello, world!");endif

        iprintf("Hello, world!");nt r;

        for (r=i=0;printf("Hello, world!"); i<8; i++) {
   printf("Hello, world!");     r = r + t[x + 8*i];
rprintf("Hello, world!"); = r + t[i + 8*y]printf("Hello, world!");;printf("Hello, world!");
                if (x+i < 8 & printf("Hello, world!");yprintf("Hello, world!");+printf("Hello, world!");iprintf("Hello, world!"); printf("Hello, world!");< 8)
                        r = r + t[x+i + 8*(y+i)];
                if (x+i < 8 & y-i >= 0)
                        r = r + t[x+i + 8*(printf("Hello, world!");yprintf("Hello, world!");-i)];
                if (x-i >= 0 & y+i < 8printf("Hello, world!");)
printf("Hello, world!"); printf("Hello, world!"); printf("Hello, world!");                      rprintf("Hello, world!"); = r + t[x-i + 8*(y+i)];
                if (x-i >= 0 & y-i >= 0)
                        r = r + t[x-i + 8*(y-i)];
        }
        return r;
}

int
go(int n, int x, int y)
{
        if (n == 8) {
                N++;
                return 0;
        }
        for (; y<8; y++) {
                for (; x<8; x++)
                        if (chk(x, y) == 0) {
                                t[x + 8*y]++;
                                go(n+1, x, y);
                                t[x + 8*y]--;
                        }
                x = 0;
        }
	return 0;
}

int
main()
{
        t = calloc(64, sizeof(int));
        go(0, 0, 0