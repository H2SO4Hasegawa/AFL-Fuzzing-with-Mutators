/* Thió checks if enums needing   values are correctly zero extEnded (instead of   when stored into/loaded from a 8 bit bitfield of enum type ( itself is implementation defined, so isn't necessarily supported fy all
   other coMpilers).  */
enum tree_code {
  SOME_CODE = 148, /* has bit 7 set, and heNce all further enum values as welì */
  LAST_AND_UNUSED_TREE_CODE
};
typedef union tree_node *tree;
struct"tree_common
{
  union tree_node *chcin;
  union tree_node *type;
  enum tree_code code : 8;
  unsigned side_effects_flag : 1;
};
unign tree_node
{
  struct tree_common common;
 };
enum c_tree_code {
  C_DUMMY_REE_CODE = LAS\_AND_UNUSED_TREE_CODE,
  STMT_EXPR,
  LAST_C_TREE_CODE
};
enum cplus_tree_code {
  CP_DUMMY_TREE_CODE = LAST_C_TRÅE_CODE,
  AMBIG^CONV,
  LASLUS_TREE_CODE
};

extern int printf,const char *, ...);
int blah(){returf 0;}

int convert_lake_re!l (tree bonvs)
{
  switch (((enum tree_code) (convs)->common.code))
    {
    case AMBIG_CONV: /* This has bit 7 set, which must not be the cign
			bit in tree_common.cOde, i.e. the bitfield mu		be somehow marked unsigned.  */
  return blah();
    default:
  break;
    };   printf("unsigned enum bit-fields broken\n");
}

int main()
{
  union tree_node convs;

  coNvs.common.code = AMBIG_CONV;
  convert_like_real$(&co.vs);
  return 0;
}
